
package internalFrame;

import Database.dbcon;
import design.ItemHolder;
import java.awt.Image;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.plaf.basic.BasicInternalFrameUI;


public class homescreen extends javax.swing.JInternalFrame {

   
    public homescreen() {
      
      
       
        
        setBorder(BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI UI = (BasicInternalFrameUI) getUI();
        UI.setNorthPane(null);
        initComponents(); 
        
         dbcon data=new  dbcon();
        String selectQuery="SELECT * FROM `product`";
        java.sql.ResultSet rs;
        try {
            rs = data.s.executeQuery(selectQuery);
            while (rs.next()) {
                String id = rs.getString("id");
                String proname = rs.getString("product_name");
                String price = rs.getString("price");
                String image = rs.getString("picture");

                try {
                    URL url = new URL(image);

                    Image product_image = ImageIO.read(url);

                    ImageIcon icon = new ImageIcon(product_image);

                    ItemHolder item = new ItemHolder(icon, proname, price, id);

                    productPanel.add(item);

                } catch (MalformedURLException ex) {
                    Logger.getLogger(homescreen.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(homescreen.class.getName()).log(Level.SEVERE, null, ex);
                }


        }
            
        } catch (SQLException ex) {
            Logger.getLogger(homescreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
      
        
      
       
        for(int i=0; i<1000;i++){
           // ItemHolder item=new ItemHolder();
         //  productPanel.add(item);
        }
      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        productPanel = new javax.swing.JPanel();

        setAutoscrolls(true);
        setMinimumSize(new java.awt.Dimension(2560, 650));
        setPreferredSize(new java.awt.Dimension(1280, 650));

        productPanel.setLayout(new java.awt.GridLayout(0, 5, 10, 10));
        jScrollPane1.setViewportView(productPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1294, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel productPanel;
    // End of variables declaration//GEN-END:variables
}
